---
title: "Codebook"
format: html
---

## Libraries

```{r}
library(tidyverse)
library(readxl)
```

## Load Data

```{r}

iowa_24_25 <- read_csv(here::here("Data", "Iowa_Liquor_Sales_2024_2025.csv"))
iowa_pop <- read_excel(here::here("Data", "Iowa_City_Populations.xlsx"),
                       skip = 3)
```

## Data Cleaning and Feature Engineering

```{r}
iowa_24_25 <- iowa_24_25 |>
  select(-c(`Invoice/Item Number`, `Store Number`, `Store Name`, `Address`,
            `Zip Code`, `Store Location`, `County Number`, Category,
            `Vendor Number`, `Vendor Name`, `Item Number`, `Item Description`,
            Pack, `Bottle Volume (ml)`, `State Bottle Cost`,
            `State Bottle Retail`, `Bottles Sold`, `Volume Sold (Gallons)`)) |>
  mutate(Date = mdy(Date),
         PopYear = case_when(Date < mdy("9/1/2021") ~ 2020,
                             Date < mdy("9/1/2022") ~ 2021,
                             Date < mdy("9/1/2023") ~ 2022,
                             Date < mdy("9/1/2024") ~ 2023,
                             TRUE ~ 2024),
         Year = year(Date),
         Date = month(Date, label = TRUE, abbr = TRUE),
         across(City:`Category Name`, str_to_title)) |>
  rename(Month = Date,
         Category = `Category Name`,
         Sales = `Sale (Dollars)`,
         LitersSold = `Volume Sold (Liters)`)

df_iowa <- iowa_pop |>
  mutate(City = str_to_title(str_remove(`...1`, " city, Iowa$")),
         College = case_when(
           City == "Iowa City" ~ "University of Iowa",
           City == "Ames" ~ "Iowa State University",
           City == "Cedar Falls" ~ "University of Northern Iowa",
           City == "Ankeny" ~ "Des Moines Area Community College",
           City == "Davenport" ~ "Eastern Iowa Community Colleges; Palmer College of Chiropractic; St. Ambrose University",
           City == "Iowa Falls" ~ "Ellsworth Community College",
           City == "Waterloo" ~ "Hawkeye Community College; Allen College",
           City == "Ottumwa" ~ "Indian Hills Community College",
           City == "Fort Dodge" ~ "Iowa Central Community College",
           City == "Estherville" ~ "Iowa Lakes Community College",
           City == "Council Bluffs" ~ "Iowa Western Community College",
           City == "Cedar Rapids" ~ "Kirkwood Community College; Coe College; Mount Mercy University",
           City == "Marshalltown" ~ "Marshalltown Community College",
           City == "Mason City" ~ "North Iowa Area Community College",
           City == "Calmar" ~ "Northeast Iowa Community College",
           City == "Sheldon" ~ "Northwest Iowa Community College",
           City == "West Burlington" ~ "Southeastern Community College",
           City == "Creston" ~ "Southwestern Community College",
           City == "Sioux City" ~ "Western Iowa Tech Community College; Briar Cliff University; Morningside University; St. Luke's College",
           City == "Sioux Center" ~ "Dordt University",
           City == "Storm Lake" ~ "Buena Vista University",
           City == "Pella" ~ "Central College",
           City == "Dubuque" ~ "Clarke University; Emmaus University; Loras College; University of Dubuque; Wartburg Theological Seminary",
           City == "Epworth" ~ "Divine Word College",
           City == "Des Moines" ~ "Drake University; Des Moines University; Mercy College of Health Sciences; Grand View University",
           City == "Mount Vernon" ~ "Cornell College",
           City == "Lamoni" ~ "Graceland University",
           City == "Grinnell" ~ "Grinnell College",
           City == "Decorah" ~ "Luther College",
           City == "Fairfield" ~ "Maharishi International University",
           City == "Indianola" ~ "Simpson College",
           City == "Orange City" ~ "Northwestern College",
           City == "Fayette" ~ "Upper Iowa University",
           City == "Waverly" ~ "Wartburg College",
           City == "Oskaloosa" ~ "William Penn University",
           City == "Forest City" ~ "Waldorf University",
           TRUE ~ NA_character_),
         CollegeTF = !is.na(College)) |>
  select(City, `2020`, `2021`, `2022`, `2023`, `2024`, College, CollegeTF)

df_iowa <- df_iowa |>
  pivot_longer(cols = -c(City, College, CollegeTF),
    names_to = "PopYear",
    values_to = "Population"
  ) |>
  mutate(PopYear = as.numeric(PopYear)) |>
  inner_join(iowa_24_25, by = c("City", "PopYear")) |>
  filter(Sales > 0,
         LitersSold > 0) |>
  mutate(Category = case_when(
      str_detect(Category, regex("Whisk", ignore_case = TRUE)) ~ "Whisky",
      str_detect(Category, regex("Vodka", ignore_case = TRUE)) ~ "Vodka",
      str_detect(Category, regex("Rum", ignore_case = TRUE)) ~ "Rum",
      str_detect(Category, regex("Gin", ignore_case = TRUE)) ~ "Gin",
      str_detect(Category, regex("Tequila|Mezcal", ignore_case = TRUE)) ~ "Tequila/Mezcal",
      str_detect(Category, regex("Brandi", ignore_case = TRUE)) ~ "Brandy",
      str_detect(Category, regex("Cordials|Liqueur|Schnapps|Triple Sec|Cream Liqueur|Coffee Liqueur", ignore_case = TRUE)) ~ "Cordials & Liqueur",
      str_detect(Category, regex("Cocktails|Rtd", ignore_case = TRUE)) ~ "Ready to Drink",
      str_detect(Category, regex("Neutral Grain Spirits", ignore_case = TRUE)) ~ "Neutral Grain Spirit",
      TRUE ~ "Other"))
```

#### Client A: Booze ‘R’ Us

```{r}
df_A <- df_iowa |>
  group_by(City, CollegeTF, Population, Category, Year, Month) |>
  summarize(TotalSales = sum(Sales)) |>
  mutate(AvgSales = TotalSales/Population) |>
  select(-TotalSales)
```

#### Client B: Drinking Excess Alcohol is Dangerous (DEAD)

```{r}
df_B <- df_iowa |>
  group_by(City, CollegeTF, Population, Category) |>
  summarize(TotalLiters = sum(LitersSold)) |>
  mutate(AvgLiters = TotalLiters/Population) |>
  select(-TotalLiters)
```

## Data Visualizations

#### Client A: Booze ‘R’ Us

```{r}
df_A |>
  mutate(Month = factor(if_else(Month == "Sep", "Sep, 2024",
                                if_else(Month == "Jan", "Jan, 2025", Month)),
                        levels = c("Sep, 2024", "Oct", "Nov", "Dec", "Jan, 2025",
                                   "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                                   "Aug")),
         #Month = month(mdy(paste(Month, "1, 2000"))),
         CollegeTF = factor(if_else(CollegeTF, "Yes", "No"),
                            levels = c("Yes", "No"))) |>
  group_by(CollegeTF, Month) |>
  summarize(AvgSales = mean(AvgSales), .groups = "drop") |>
  ggplot(aes(x = Month, y = AvgSales, color = CollegeTF, group = CollegeTF)) +
  geom_line() +
  #scale_x_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
                     #labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
                                #"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) +
  scale_color_manual(values = c("steelblue", "orange3")) +
  labs(x = "Month", y = "Average Sales per Capita ($)",
       color = "College Town?", title = "Iowa Alcohol Sales Per Capita") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

#### Client B: Drinking Excess Alcohol is Dangerous (DEAD)

```{r}
library(tidyverse)

dataset_b <- df_iowa |>
  group_by(City, CollegeTF, Population, Category) |>
  summarise(LitersSold = sum(LitersSold), .groups = "drop") |>
  mutate(AvgLiters = LitersSold / Population) |>
  mutate(CollegeTF = if_else(CollegeTF, "College town", "Non-college"))

weighted_by_cat <- dataset_b |>
  group_by(Category, CollegeTF) |>
  summarise(
    weighted_mean = weighted.mean(AvgLiters, w = Population, na.rm = TRUE),
    .groups = "drop"
  ) |>
  mutate(
    CollegeTF = factor(CollegeTF, levels = c("College town", "Non-college"))
  )

ggplot(weighted_by_cat, aes(x = Category, y = weighted_mean, fill = CollegeTF)) +
  geom_col(position = position_dodge(width = 0.7), width = 0.65) +
  coord_flip() +
  scale_fill_manual(
    values = c("College town" = "steelblue", "Non-college" = "orange3"),
    breaks = c("College town", "Non-college"),
    labels = c("College town", "Non-college")
  ) +
  labs(x = NULL, y = "Population-weighted avg liters per person", fill = NULL) +
  theme_minimal(base_size = 11) +
  theme(panel.grid.minor = element_blank())

```
